/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ps.view;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.event.TableModelEvent;
import threads.ServerThread;
import view.components.TableModelLibrarians;

/**
 *
 * @author LORA
 */
public class FrmMain extends javax.swing.JFrame {

    private ServerThread serverThread;
    /**
     * Creates new form FrmMain
     */
    public FrmMain() {
        initComponents();
        miStopServer.setEnabled(false);
        miLoggedUsers.setEnabled(false);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        meniBar = new javax.swing.JMenuBar();
        meniServer = new javax.swing.JMenu();
        miStartServer = new javax.swing.JMenuItem();
        miStopServer = new javax.swing.JCheckBoxMenuItem();
        miLoggedUsers = new javax.swing.JMenuItem();
        meniConfig = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Serverska forma");

        meniServer.setText("Server");
        meniServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniServerActionPerformed(evt);
            }
        });

        miStartServer.setText("Pokreni server");
        miStartServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miStartServerActionPerformed(evt);
            }
        });
        meniServer.add(miStartServer);

        miStopServer.setSelected(true);
        miStopServer.setText("Zaustavi server");
        miStopServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miStopServerActionPerformed(evt);
            }
        });
        meniServer.add(miStopServer);

        miLoggedUsers.setText("Ulogovani bibliotekari");
        miLoggedUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miLoggedUsersActionPerformed(evt);
            }
        });
        meniServer.add(miLoggedUsers);

        meniBar.add(meniServer);

        meniConfig.setText("Konfiguracija");
        meniConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meniConfigActionPerformed(evt);
            }
        });

        jMenuItem2.setText("Otvori");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        meniConfig.add(jMenuItem2);

        meniBar.add(meniConfig);

        setJMenuBar(meniBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miStartServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miStartServerActionPerformed
        if(serverThread==null || !serverThread.isAlive()){
            try {
                serverThread=new ServerThread();
                serverThread.start();
                
                miStartServer.setEnabled(false);
                miLoggedUsers.setEnabled(true);
                miStopServer.setEnabled(true);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_miStartServerActionPerformed

    private void miStopServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miStopServerActionPerformed
        if(serverThread.getServerSocket()!=null && serverThread.getServerSocket().isBound()){
            try {
                serverThread.getServerSocket().close();
                miStartServer.setEnabled(true);
                miLoggedUsers.setEnabled(false);
                miStopServer.setEnabled(false);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_miStopServerActionPerformed

    private void meniServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meniServerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_meniServerActionPerformed

    private void miLoggedUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miLoggedUsersActionPerformed
        ActiveUsersForm acf=new ActiveUsersForm(this, true);
        acf.setVisible(true);
    }//GEN-LAST:event_miLoggedUsersActionPerformed

    private void meniConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meniConfigActionPerformed
        
    }//GEN-LAST:event_meniConfigActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        (new ConfigurationForm(this, true)).setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuBar meniBar;
    private javax.swing.JMenu meniConfig;
    private javax.swing.JMenu meniServer;
    private javax.swing.JMenuItem miLoggedUsers;
    private javax.swing.JMenuItem miStartServer;
    private javax.swing.JCheckBoxMenuItem miStopServer;
    // End of variables declaration//GEN-END:variables

    public ServerThread getServerThread() {
        return serverThread;
    }



}
